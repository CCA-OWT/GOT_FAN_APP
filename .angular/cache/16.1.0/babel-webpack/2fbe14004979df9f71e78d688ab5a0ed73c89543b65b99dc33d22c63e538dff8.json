{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let HousesDetailComponent = class HousesDetailComponent {\n  constructor(route, resourceService, location, router) {\n    this.route = route;\n    this.resourceService = resourceService;\n    this.location = location;\n    this.router = router;\n    this.house = {\n      url: \"\",\n      name: \"\",\n      region: \"\",\n      coatOfArms: \"\",\n      words: \"\",\n      titles: [],\n      seats: [],\n      currentLord: \"\",\n      heir: \"\",\n      overlord: \"\",\n      founded: \"\",\n      founder: \"\",\n      diedOut: \"\",\n      ancestralWeapons: [],\n      cadetBranches: [],\n      swornMembers: []\n    };\n    this.houses = new Map();\n    this.characters = new Map();\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n  }\n  ngOnInit() {\n    this.getHouse();\n    this.getHouses();\n    this.getCharacters();\n  }\n  getHouse() {\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    this.resourceService.getHouse(id).subscribe(house => this.house = house);\n  }\n  getHouses() {\n    for (let i = 1; i < 10; i++) {\n      this.resourceService.getHouses(i).subscribe(houses => {\n        houses.forEach(house => {\n          const id = Number(house.url.split(\"/\").at(-1) ?? -1);\n          this.houses.set(id, house.name);\n        });\n      });\n    }\n  }\n  getCharacters() {\n    for (let i = 1; i < 44; i++) {\n      this.resourceService.getCharacters(i).subscribe(characters => {\n        characters.forEach(character => {\n          const id = Number(character.url.split(\"/\").at(-1) ?? -1);\n          this.characters.set(id, character.name);\n        });\n      });\n    }\n  }\n  getHouseName(house) {\n    const id = Number(house.split(\"/\").at(-1) ?? -1);\n    if (id >= 0) {\n      const name = this.houses.get(id);\n      if (name == \"\") {\n        return \"Unknown (\" + id + \")\";\n      } else {\n        return this.houses.get(id) ?? \"Name not found (\" + id + \")\";\n      }\n    } else {\n      return \"House not found\";\n    }\n  }\n  getCharacterName(character) {\n    const id = Number(character.split(\"/\").at(-1) ?? -1);\n    if (id >= 0) {\n      const name = this.characters.get(id);\n      if (name == \"\") {\n        return \"Unknown (\" + id + \")\";\n      } else {\n        return this.characters.get(id) ?? \"Name not found (\" + id + \")\";\n      }\n    } else {\n      return \"Character not found\";\n    }\n  }\n  getHouseLink(url) {\n    return \"/houses/\" + url.split(\"/\").at(-1);\n  }\n  getCharacterLink(url) {\n    return \"/characters/\" + url.split(\"/\").at(-1);\n  }\n  goBack() {\n    this.location.back();\n  }\n};\nHousesDetailComponent = __decorate([Component({\n  selector: 'app-houses-detail',\n  templateUrl: './houses-detail.component.html',\n  styleUrls: ['./houses-detail.component.css']\n})], HousesDetailComponent);","map":{"version":3,"names":["Component","HousesDetailComponent","constructor","route","resourceService","location","router","house","url","name","region","coatOfArms","words","titles","seats","currentLord","heir","overlord","founded","founder","diedOut","ancestralWeapons","cadetBranches","swornMembers","houses","Map","characters","routeReuseStrategy","shouldReuseRoute","ngOnInit","getHouse","getHouses","getCharacters","id","Number","snapshot","paramMap","get","subscribe","i","forEach","split","at","set","character","getHouseName","getCharacterName","getHouseLink","getCharacterLink","goBack","back","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/owtbslolt003/Documents/DEV/Angular Training/GOT_FAN_APP/src/app/houses/houses-detail/houses-detail.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { House } from 'src/app/house';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ResourceService } from 'src/app/resource.service';\n\n@Component({\n  selector: 'app-houses-detail',\n  templateUrl: './houses-detail.component.html',\n  styleUrls: ['./houses-detail.component.css']\n})\nexport class HousesDetailComponent {\n\n  constructor(\n    private route: ActivatedRoute,\n    private resourceService: ResourceService,\n    private location: Location,\n    private router: Router\n  ) {\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n  }\n\n  ngOnInit(): void {\n    this.getHouse();\n    this.getHouses();\n    this.getCharacters();\n  }\n\n  house: House = {\n    url: \"\",\n    name: \"\",\n    region: \"\",\n    coatOfArms: \"\",\n    words: \"\",\n    titles: [],\n    seats: [],\n    currentLord: \"\",\n    heir: \"\",\n    overlord: \"\",\n    founded: \"\",\n    founder: \"\",\n    diedOut: \"\",\n    ancestralWeapons: [],\n    cadetBranches: [],\n    swornMembers: []\n  }\n\n  houses: Map<number, string> = new Map()\n\n  characters: Map<number, string> = new Map()\n  \n  getHouse(): void {\n    const id = Number(this.route.snapshot.paramMap.get('id'));\n    this.resourceService.getHouse(id)\n      .subscribe(house => this.house = house);\n  }\n\n  getHouses(): void {\n    for (let i = 1; i < 10; i++) {\n      this.resourceService.getHouses(i).subscribe(houses => {\n        houses.forEach(house => {\n          const id = Number(house.url.split(\"/\").at(-1) ?? -1)\n          this.houses.set(id, house.name)\n        })\n      });\n    }\n  }\n\n  getCharacters(): void {\n    for (let i = 1; i < 44; i++) {\n      this.resourceService.getCharacters(i).subscribe(characters => {\n        characters.forEach(character => {\n          const id = Number(character.url.split(\"/\").at(-1) ?? -1)\n          this.characters.set(id, character.name)\n        })\n      });\n    }\n  }\n\n  getHouseName(house: string): string {\n    const id = Number(house.split(\"/\").at(-1) ?? -1)\n    if(id >= 0) {\n      const name = this.houses.get(id)\n      if(name == \"\") {\n        return \"Unknown (\" + id + \")\"\n      }\n      else {\n        return this.houses.get(id) ?? \"Name not found (\" + id + \")\"\n      }\n    }\n    else {\n      return \"House not found\"\n    }\n  }\n\n  getCharacterName(character: string): string {\n    const id = Number(character.split(\"/\").at(-1) ?? -1)\n    if(id >= 0) {\n      const name = this.characters.get(id)\n      if(name == \"\") {\n        return \"Unknown (\" + id + \")\"\n      }\n      else {\n        return this.characters.get(id) ?? \"Name not found (\" + id + \")\"\n      }\n    }\n    else {\n      return \"Character not found\"\n    }\n  }\n\n  getHouseLink(url: string): string {\n    return \"/houses/\" + url.split(\"/\").at(-1)\n  }\n\n  getCharacterLink(url: string): string {\n    return \"/characters/\" + url.split(\"/\").at(-1)\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}