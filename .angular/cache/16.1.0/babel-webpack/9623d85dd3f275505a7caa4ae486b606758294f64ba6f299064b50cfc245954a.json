{"ast":null,"code":"import { catchError, of, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ResourceService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://anapioficeandfire.com/api/';\n    this.booksApirUrl = this.apiUrl + \"books\";\n    this.charactersApirUrl = this.apiUrl + \"characters\";\n    this.housesApirUrl = this.apiUrl + \"houses\";\n  }\n  getBooks() {\n    const url = `${this.booksApirUrl}?page=1&pageSize=50`;\n    return this.http.get(url).pipe(tap(_ => console.log('getBooks() successfully')), catchError(this.handleError('getBooks()')));\n  }\n  getBook(id) {\n    const url = `${this.booksApirUrl}/${id}`;\n    return this.http.get(url).pipe(tap(_ => console.log(`getBook(${id}) successfully`)), catchError(this.handleError(`getBook(${id})`)));\n  }\n  getCharacters() {\n    const url = `${this.charactersApirUrl}?page=1&pageSize=50`;\n    return this.http.get(url).pipe(tap(_ => console.log('getCharacter() successfully')), catchError(this.handleError('getCharacter()')));\n  }\n  getCharacter(id) {\n    const url = `${this.charactersApirUrl}/${id}`;\n    return this.http.get(url).pipe(tap(_ => console.log(`getCharacter(${id}) successfully`)), catchError(this.handleError(`getCharacter(${id})`)));\n  }\n  getHouses() {\n    const url = `${this.housesApirUrl}?page=1&pageSize=50`;\n    return this.http.get(url).pipe(tap(_ => console.log('getHouses() successfully')), catchError(this.handleError('getHouses()')));\n  }\n  getHouse(id) {\n    const url = `${this.housesApirUrl}/${id}`;\n    return this.http.get(url).pipe(tap(_ => console.log(`getHouse(${id}) successfully`)), catchError(this.handleError(`getHouse(${id})`)));\n  }\n  handleError(operation = 'operation', result) {\n    return error => {\n      console.error(`${operation} failed: ${error.message}`);\n      console.error(error);\n      // Let the app keep running by returning an empty result.\n      return of(result);\n    };\n  }\n}\nResourceService.ɵfac = function ResourceService_Factory(t) {\n  return new (t || ResourceService)(i0.ɵɵinject(i1.HttpClient));\n};\nResourceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ResourceService,\n  factory: ResourceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["catchError","of","tap","ResourceService","constructor","http","apiUrl","booksApirUrl","charactersApirUrl","housesApirUrl","getBooks","url","get","pipe","_","console","log","handleError","getBook","id","getCharacters","getCharacter","getHouses","getHouse","operation","result","error","message","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/owtbslolt003/Documents/DEV/Angular Training/GOT_FAN_APP/src/app/resource.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, catchError, of, tap } from 'rxjs';\nimport { Book } from './book';\nimport { Character } from './character';\nimport { House } from './house';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResourceService {\n\n  constructor(private http: HttpClient) { }\n\n  private apiUrl = 'https://anapioficeandfire.com/api/';\n  private booksApirUrl = this.apiUrl + \"books\";\n  private charactersApirUrl = this.apiUrl + \"characters\";\n  private housesApirUrl = this.apiUrl + \"houses\";\n\n  getBooks(): Observable<Book[]> {\n    const url = `${this.booksApirUrl}?page=1&pageSize=50`;\n    return this.http.get<Book[]>(url).pipe(\n      tap(_ => console.log('getBooks() successfully')),\n      catchError(this.handleError<Book[]>('getBooks()'))\n    );\n  }\n\n  getBook(id: number): Observable<Book> {\n    const url = `${this.booksApirUrl}/${id}`;\n    return this.http.get<Book>(url).pipe(\n      tap(_ => console.log(`getBook(${id}) successfully`)),\n      catchError(this.handleError<Book>(`getBook(${id})`))\n    );\n  }\n\n  getCharacters(): Observable<Character[]> {\n    const url = `${this.charactersApirUrl}?page=1&pageSize=50`;\n    return this.http.get<Character[]>(url).pipe(\n      tap(_ => console.log('getCharacter() successfully')),\n      catchError(this.handleError<Character[]>('getCharacter()'))\n    );\n  }\n\n  getCharacter(id: number): Observable<Character> {\n    const url = `${this.charactersApirUrl}/${id}`;\n    return this.http.get<Character>(url).pipe(\n      tap(_ => console.log(`getCharacter(${id}) successfully`)),\n      catchError(this.handleError<Character>(`getCharacter(${id})`))\n    );\n  }\n\n  getHouses(): Observable<House[]> {\n    const url = `${this.housesApirUrl}?page=1&pageSize=50`;\n    return this.http.get<House[]>(url).pipe(\n      tap(_ => console.log('getHouses() successfully')),\n      catchError(this.handleError<House[]>('getHouses()'))\n    );\n  }\n\n  getHouse(id: number): Observable<House> {\n    const url = `${this.housesApirUrl}/${id}`;\n    return this.http.get<House>(url).pipe(\n      tap(_ => console.log(`getHouse(${id}) successfully`)),\n      catchError(this.handleError<House>(`getHouse(${id})`))\n    );\n  }\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      console.error(`${operation} failed: ${error.message}`);\n      console.error(error);\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}