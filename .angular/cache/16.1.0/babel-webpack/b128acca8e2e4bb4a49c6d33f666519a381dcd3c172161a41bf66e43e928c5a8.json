{"ast":null,"code":"import { of } from 'rxjs';\nimport { HttpResponse } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nexport class AuthenticationService {\n  constructor() {\n    this.fakeUsername = \"username\";\n    this.fakePassword = \"password\";\n  }\n  login(username, password) {\n    if (username == this.fakeUsername && password == this.fakePassword) {\n      localStorage.setItem(\"token\", \"my-super-secret-token-from-server\");\n      return of(new HttpResponse({\n        status: 200\n      }));\n    } else {\n      return of(new HttpResponse({\n        status: 401\n      }));\n    }\n  }\n  logout() {\n    localStorage.removeItem(\"token\");\n  }\n  isUserLoggedIn() {\n    if (localStorage.getItem(\"token\") != null) {\n      return true;\n    }\n    return false;\n  }\n}\nAuthenticationService.ɵfac = function AuthenticationService_Factory(t) {\n  return new (t || AuthenticationService)();\n};\nAuthenticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthenticationService,\n  factory: AuthenticationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["of","HttpResponse","AuthenticationService","constructor","fakeUsername","fakePassword","login","username","password","localStorage","setItem","status","logout","removeItem","isUserLoggedIn","getItem","factory","ɵfac","providedIn"],"sources":["/Users/owtbslolt003/Documents/DEV/Angular Training/GOT_FAN_APP/src/app/authentication.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { HttpResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  fakeUsername: string = \"username\";\n  fakePassword: string = \"password\";\n\n  constructor() { }\n\n  login(username: string, password: string): Observable<any> {\n    if (username == this.fakeUsername && password == this.fakePassword) {\n      localStorage.setItem(\"token\", \"my-super-secret-token-from-server\");\n      return of(new HttpResponse({ status: 200 }));\n    } else {\n      return of(new HttpResponse({ status: 401 }));\n    }\n  }\n\n  logout(): void {\n    localStorage.removeItem(\"token\");\n  }\n\n  isUserLoggedIn(): boolean {\n    if (localStorage.getItem(\"token\") != null) {\n      return true;\n    }\n    return false;\n  }\n}\n"],"mappings":"AACA,SAAqBA,EAAE,QAAQ,MAAM;AACrC,SAASC,YAAY,QAAQ,sBAAsB;;AAKnD,OAAM,MAAOC,qBAAqB;EAKhCC,YAAA;IAHA,KAAAC,YAAY,GAAW,UAAU;IACjC,KAAAC,YAAY,GAAW,UAAU;EAEjB;EAEhBC,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IACtC,IAAID,QAAQ,IAAI,IAAI,CAACH,YAAY,IAAII,QAAQ,IAAI,IAAI,CAACH,YAAY,EAAE;MAClEI,YAAY,CAACC,OAAO,CAAC,OAAO,EAAE,mCAAmC,CAAC;MAClE,OAAOV,EAAE,CAAC,IAAIC,YAAY,CAAC;QAAEU,MAAM,EAAE;MAAG,CAAE,CAAC,CAAC;KAC7C,MAAM;MACL,OAAOX,EAAE,CAAC,IAAIC,YAAY,CAAC;QAAEU,MAAM,EAAE;MAAG,CAAE,CAAC,CAAC;;EAEhD;EAEAC,MAAMA,CAAA;IACJH,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC;EAClC;EAEAC,cAAcA,CAAA;IACZ,IAAIL,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE;MACzC,OAAO,IAAI;;IAEb,OAAO,KAAK;EACd;;AAzBWb,qBAAqB,C;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB,C;SAArBA,qBAAqB;EAAAc,OAAA,EAArBd,qBAAqB,CAAAe,IAAA;EAAAC,UAAA,EAFpB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}